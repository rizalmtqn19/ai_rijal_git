GIT, GITLAB, DAN GITHUB


A. GIT
	Git (Group Inclusive Tour) adalah jenis version control system yang bersifat open source dan juga gratis. Git ini dirancang untuk menangani segala project baik itu project besar atau project sederhana. Git memungkinkan bagi para developer untuk bekerja secara teamwork pada project yang sama dan melacak setiap perubahan yang dilakukan pada source code. Git memiliki 2 sistem, yaitu centralized dan distributed. 
	Sistem git centralized berkerja hanya dengan menggunakan satu server yang berfungsi untuk menyimpan data dari project, membutuhkan koneksi network untuk dapat mengakses data dari project, tetapi ketika terjadi sesuatu pada server seperti server corrupt maka data project yang ada di dalam server akan berpotensi untuk hilang juga. Sedangkan sistem git distributed bekerja dengan menyimpan data project di lokal dan juga di server sehingga lebih aman ketika terjadi sesuatu pada server seperti server corrupt karena sudah terdapat backup dari data project di lokal.
	Pada git juga terdapat berbagai macam fitur, seperti version control, git branch, merging, staging area, git rebase, hooks, dan GUI tools. Fitur pertama yaitu version control, git menyimpan setiap perubahan yang diubah pada source code, sehingga memungkinkan pengguna untuk memantau dan mengelola code version yang berbeda. Fitur kedua yaitu git branch, digunakan ketika developer akan menambahkan fitur baru atau memperbaiki bug, fungsi utama dari branch ialah agar pada saat penambahan fitur baru tidak mengganggu source code utama, dan ketika pengerjaan dari fitur baru sudah diselesaikan dan sudah di testing maka branch feature akan dimerge ke dalam branch master/main. Fitur ketiga yaitu merging, memungkinkan pengguna yang telah selesai mendevelop code dan sudah melakukan testing pada branch baru untuk menggabungkan perubahan yang telah dibuat ke branch utama. Fitur keempat yaitu staging area, di mana pengguna dapat memilih perubahan mana yang akan di-commit ke repository. Fitur kelima yaitu git rebase, digunakan untuk menggabungkan atau menggeser commit base. Fitur keenam yaitu hooks, script yang dijalankan secara otomatis saat terjadi peristiwa tertentu di dalam Git, seperti commit atau push. Dan fitur ketujuh yaitu GUI tools, untuk memudahkan penggunaan Git bagi pengguna yang kurang terbiasa dengan command line.
	Git tentunya memiliki kelebihan dan kekurangan. Kelebihan pada git diantaranya dapat mengelola versi kode sumber dengan mudah dan efisien, dapat melakukan branching dan merging dengan mudah dan aman, dan memiliki performa yang cepat dan stabil dalam pengelolaan kode sumber yang besar. Sementara kekurangan pada git diantaranya memiliki fitur yang kompleks dan terkadang membingungkan bagi pengguna yang kurang berpengalaman, memerlukan pemahaman yang baik tentang konsep dasar seperti repository; commit; branching; dan merging, dan sulit digunakan untuk pengelolaan file biner atau non-teks seperti gambar atau video.
	Adapun tatacara penginstallan git adalah sebagai berikut. Pertama, buka halaman download Git di https://git-scm.com/downloads. Kedua, pilih versi Git yang sesuai untuk sistem operasi Anda (Windows, Mac, atau Linux). Ketiga, klik link download untuk mulai mengunduh instalator Git. Keempat, setelah unduhan selesai, buka file instalator dan ikuti instruksi yang muncul pada layar. Kelima, selama proses instalasi, Anda dapat memilih komponen yang ingin diinstal dan direktori tempat Git akan diinstal. Dan keenam, setelah instalasi selesai, Anda dapat memverifikasi instalasi Git dengan membuka terminal (command prompt di Windows) dan mengetikkan perintah git --version. Jika Git terinstal dengan benar, versi Git yang terpasang akan ditampilkan.


B. GITLAB
	Gitlab merupakan salah satu layanan yang menyediakan layanan akses remote ke Git repositories. Gitlab juga dapat meng-hosting project akan tetapi bersifat static. Gitlab mempermudah para developer dalam mengembangkan software dengan menyediakan manajemen internal git repositories. Untuk saat ini gitlab sudah memiliki 4 versi, yaitu Gitlab Enterprise Edition, Gitlab.com, Gitlab Community edition (Gitlab CE), dan Gitlab CI.
	Gitlab juga memiliki keunggulan dan kekurangan. keunggulan dari gitlab diantaranya pemrosesan CI/CD yang mudah digunakan, tingkat keamanan yang tinggi, dan fitur kolaborasi yang lebih unggul. Sedangkan kekurangan dari gitlab adalah susah untuk dipelajari pemula, konfigurasi yang rumit, dan tidak gratis sepenuhnya.
	Untuk membuat repository di gitlab, terdapat beberapa langkah. Pertama, login ke akun GitLab Anda. Lalu, klik tombol "New Project". Kemudian, pilih opsi "Create blank project". Setelah itu, isikan nama untuk project Anda dan deskripsi opsional (optional). Lanjut, pilih visibilitas project Anda. Anda dapat memilih public atau private. Lalu, pilih opsi "Initialize repository with a README" jika Anda ingin membuat README file. Terakhir, klik tombol "Create project" untuk membuat project baru.


C. GITHUB
	Github merupakan salah satu layanan hosting git repository. Github juga memungkinkan para developer untuk mengelola source code-nya dengan version control system milik github atau lebih mudahnya github merupakan manajemen project, sistem versioning code, sekaligus platform jejaringan sosial bagi para developer seluruh dunia. Github juga terintegrasi dengan layanan seperti amazon, Google Cloud dan code climate, yang mana github dapat menampung sintaks dari 200 bahasa pemrograman yang tidak sama.
	Github memiliki 3 fitur penting yaitu forking (membuat proyek baru berdasarkan repository yang sudah ada. Sederhananya forking repository merupakan menyalin repository yang sudah ada dan melakukan perubahan sesuai yang diinginkan kemudian menyimpan versi terbaru di repository baru dan menjadikan proyek itu menjadi milik proyek sendiri), pull request, dan merging (penggabungan source code yang sudah diubah pada suatu branch ke branch lainnya).
	Github juga memiliki keunggulan dan kekurangan. Untuk keunggulannya github gratis digunakan, proyek atau kode kita bisa diakses oleh pengguna lain,yang nantinya akan bermanfaat bagi kita untuk meningkatkan proyek kita tersebut, github dapat melacak perubahan yang terjadi di changelog,tentunya hal ini kita akan mengetahui perubahan apa saja yang terjadi, dengan adanya github kita bisa akses proyek orang lain yang mungkin akan membangkitkan semangat atau motivasi kita untuk mengerjakan proyek lebih bagus, dan mampu mengintegrasikan Development IDE seperti Visual Code Studio,Eclipse,dan lainnya. Sementara kekurangannya keamanan di github tidak berlaku untuk repositori pribadi, github memerlukan koneksi internet yang stabil dan cukup cepat untuk mengakses dan menggunakan platform, dan github membatasi pengguna untuk membuat repositori pribadi, sehingga pengguna harus membayar untuk menggunakan repositori pribadi dalam jumlah yang lebih besar.
	Untuk membuat repository di GitHub juga harus melalui beberapa langkah. Pertama, buka situs web GitHub dan masuk ke akun GitHub. Kedua, klik tombol "+" di pojok kanan atas halaman dan pilih new repository. Ketiga, isi nama repository dan pastikan dalam pemberian nama jelas dan deskriptif agar mudah diingat. Keempat, jika Anda ingin menambahkan deskripsi untuk repository, isikan pada kolom "Description". Kelima, ika ingin membuat repository menjadi publik, pastikan opsi "Public" diatur sebagai opsi terpilih. Jika ingin membuat repository pribadi, pilih opsi "Private" dan pastikan akun GitHub memiliki akses ke fitur ini. Keenam, pilih lisensi untuk repository Anda (jika diperlukan). GitHub menyediakan beberapa lisensi open source yang dapat Anda pilih. Ketujuh, di sini juga dapat menambahkan file README untuk memberikan penjelasan singkat tentang repository yang telah dibuat tadi. Dan yang kedelapan, klik tombol "Create Repository" untuk membuat repository baru.





